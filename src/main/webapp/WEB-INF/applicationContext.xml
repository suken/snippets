<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
       	http://www.springframework.org/schema/tx 
      	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
      	http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<!-- ++++++++++++++++++++++++++++++++ Spring context +++++++++++++++++++++++++++++++++++++++++ -->
	
	<context:annotation-config />
	<context:component-scan base-package="com.javashop.snippets" />

	<!-- ++++++++++++++++++++++++++++++++ Entity Manager +++++++++++++++++++++++++++++++++++++++++ -->
	
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="snippetsdb" />
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.javashop.snippets.data" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
				<property name="generateDdl" value="true" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.jdbc.batch_size">10</prop>
				<prop key="hibernate.archive.autodetection">class</prop>

				<!-- Set-Up Transaction Look-Up for Atomikos (Stand-Alone) -->
				<prop key="hibernate.current_session_context_class">jta</prop>
				<prop key="hibernate.transaction.manager_lookup_class">
					com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup
				</prop>

				<!-- Activate Second-Order Cache for Entities and Queries -->
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>

			</props>
		</property>
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/snippetsdb" />
		<property name="username" value="snpt" />
		<property name="password" value="snpt" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<tx:annotation-driven />
	
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- ++++++++++++++++++++++++++++++++ Security ++++++++++++++++++++++++++++++++++++++++++++++++ -->
	
	<security:http auto-config="true">
		<security:intercept-url pattern="/*" />
		<security:form-login login-page="/snpt/login" default-target-url="/snpt/login" always-use-default-target="true"/>
		<security:session-management invalid-session-url="/snpt/login">
			<security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/>
		</security:session-management>
		<security:csrf disabled="true"/>
	</security:http>
	
	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider>
			<!--
			<security:password-encoder hash="sha-256">
				<security:salt-source user-property="userName"/>
			</security:password-encoder>
			 -->
			<security:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="SELECT USERNAME, PASSWORD, ENABLED FROM SNPT_USERS WHERE USERNAME = ?;"
				authorities-by-username-query="SELECT U.USERNAME, R.ROLE FROM SNPT_USERS U
					INNER JOIN SNPT_USER_ROLES_SNPT_USERS UR ON U.ID = UR.USERS_ID
					INNER JOIN SNPT_USER_ROLES R ON R.ID = UR.SNPT_USER_ROLES_ID
					WHERE U.USERNAME = ?;"/>
		</security:authentication-provider>
	</security:authentication-manager>
	
	<!-- ++++++++++++++++++++++++++++++++ Services ++++++++++++++++++++++++++++++++++++++++++++++++ -->
	
	<bean id="snippetService" class="com.javashop.snippets.service.impl.SnippetServiceImpl" />
	<bean id="userService" class="com.javashop.snippets.service.impl.UserServiceImpl" />

	<bean id="serviceRegistry" class="com.javashop.snippets.service.ServiceRegistry"
		factory-method="createRegistry">
		<constructor-arg>
			<list>
				<bean class="com.javashop.snippets.service.ServiceInfo">
					<property name="name"
						value="com.javashop.snippets.service.ISnippetService" />
					<property name="service" ref="snippetService" />
				</bean>
				<bean class="com.javashop.snippets.service.ServiceInfo">
					<property name="name"
						value="org.springframework.security.authentication.AuthenticationManager" />
					<property name="service" ref="authenticationManager" />
				</bean>
				<bean class="com.javashop.snippets.service.ServiceInfo">
					<property name="name"
						value="com.javashop.snippets.service.IUserService" />
					<property name="service" ref="userService" />
				</bean>
			</list>
		</constructor-arg>
	</bean>

</beans>
